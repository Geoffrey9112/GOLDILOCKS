CMAKE_MINIMUM_REQUIRED (VERSION 2.6)

#set the Standard Library
SET (ST_LIBRARY st)
LINK_DIRECTORIES (${PRODUCT_LAYER_STANDARD_DIR}/dev/lib)

INCLUDE_DIRECTORIES(${PRODUCT_LAYER_STANDARD_DIR}/dev/include)

SET( LIBRT rt )
SET( TEST_REQUIRED_LIBRARIES ${ST_LIBRARY} ${LIBRT} )

#define a macro to simplify adding tests, then use it
MACRO (DO_TEST ARG)
  ADD_EXECUTABLE( test${ARG} test${ARG}.c )
  TARGET_LINK_LIBRARIES (test${ARG} ${TEST_REQUIRED_LIBRARIES} )
  ADD_TEST (${ARG} test${ARG})
  SET_TESTS_PROPERTIES( ${ARG}
    PROPERTIES PASS_REGULAR_EXPRESSION
    "PASS")
ENDMACRO (DO_TEST)

# UNIT TEST

ADD_EXECUTABLE( tryRead tryRead.c )
TARGET_LINK_LIBRARIES (tryRead ${TEST_REQUIRED_LIBRARIES} )

ADD_EXECUTABLE( ocChild ocChild.c )
TARGET_LINK_LIBRARIES (ocChild ${TEST_REQUIRED_LIBRARIES} )

ADD_EXECUTABLE( procChild procChild.c )
TARGET_LINK_LIBRARIES (procChild ${TEST_REQUIRED_LIBRARIES} )

ADD_EXECUTABLE( shmProducer shmProducer.c )
TARGET_LINK_LIBRARIES (shmProducer ${TEST_REQUIRED_LIBRARIES} )

ADD_EXECUTABLE( shmConsumer shmConsumer.c )
TARGET_LINK_LIBRARIES (shmConsumer ${TEST_REQUIRED_LIBRARIES} )

ADD_EXECUTABLE( sockChild sockChild.c )
TARGET_LINK_LIBRARIES (sockChild ${TEST_REQUIRED_LIBRARIES} )

#TEST
#INCLUDE(CTest)

DO_TEST(APRArgs)
DO_TEST(APRAtomic)
DO_TEST(APRDup)   
DO_TEST(APREnv)
DO_TEST(APRFile)
DO_TEST(APRFileCopy)
DO_TEST(APRFileInfo)
DO_TEST(APRFlock)      
DO_TEST(APRFmt) 
DO_TEST(APROc)
DO_TEST(APRPoll)      
DO_TEST(APRProc)     
DO_TEST(APRSleep)
DO_TEST(APRShm) 
DO_TEST(APRSock)
DO_TEST(APRSockets)
DO_TEST(APRSockOpt)  
DO_TEST(APRStr)   
DO_TEST(APRStrCmp) 
DO_TEST(APRThread)    
DO_TEST(APRTime)
DO_TEST(APRUser)      
